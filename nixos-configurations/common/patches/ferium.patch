--- a/src/download.rs
+++ b/src/download.rs
@@ -23,6 +23,8 @@
 };
 use tokio::sync::Semaphore;
 
+const CONCURRENT_DOWNLOADS: usize = 6;
+
 /// Check the given `directory`
 ///
 /// - If there are files there that are not in `to_download` or `to_install`, they will be moved to `directory`/.old
@@ -117,17 +119,17 @@
         .expect("Mutex poisoned")
         .enable_steady_tick(Duration::from_millis(100));
     let mut tasks = FuturesUnordered::new();
-    let semaphore = Arc::new(Semaphore::new(75));
-    let client = Arc::new(Client::new());
+    let semaphore = Arc::new(Semaphore::new(CONCURRENT_DOWNLOADS));
+    let client = reqwest::Client::new();
 
     for downloadable in to_download {
-        let permit = Arc::clone(&semaphore).acquire_owned().await?;
+        let semaphore = Arc::clone(&semaphore);
         let progress_bar = Arc::clone(&progress_bar);
-        let client = Arc::clone(&client);
+        let client = client.clone();
         let output_dir = output_dir.clone();
 
         tasks.push(async move {
-            let _permit = permit;
+            let _permit = semaphore.acquire_owned().await?;
             let (length, filename) = downloadable
                 .download(&client, &output_dir, |additional| {
                     progress_bar
